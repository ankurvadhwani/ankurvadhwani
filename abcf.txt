import asyncio
from playwright.async_api import async_playwright
import random
async def run_test(num_of_tabs, urls,loc):
    async with async_playwright() as p:
        devices=p.devices
        
        android_devices = {}  # Use a dictionary to store Android devices

        for device_name, device in p.devices.items():
            if "android" in device.get("user_agent", "").lower():
                android_devices[device_name] = device
        
        win_devices = {}  # Use a dictionary to store Android devices

        for device_name, device in p.devices.items():
            if "windows" in device.get("user_agent", "").lower():
                win_devices[device_name] = device 


        browser = await p.chromium.launch(headless=False)
        #device = random.choice(list(devices.values()))  # Randomly select a device
        device = random.choice(list(win_devices.values()))
        #print(f"Simulating device: {selected_device}")
        
        #device = p.devices["iPhone 13"]
        print(device)
        context_options = {
            **device,  # Device settings (spread the device dictionary)
            "geolocation": loc,  # Geolocation settings
            # other context options if you need them
            "viewport": device["viewport"] # Ensure viewport is set
        }
        context = await browser.new_context(**context_options)
        #context=await browser.new_context()
        count=1
        for i in range(num_of_tabs):
            pages = browser.contexts[0].pages
            if len(pages) > 2:
                for ix in range(len(pages) -1 ):
                    page_to_close=pages[ix]
                    await page_to_close.close() 
            
            page = await context.new_page()
            url=random.choice(urls)
            try:
                print("tab_started = ",count,"/",num_of_tabs," | total active tabs",len(pages))
                count=count+1
                await page.context.clear_cookies()
                #await page.goto(url, wait_until="networkidle")
                await page.goto(url)  
              
                allselectors=[[ ".abcd",".pl-0e738b8b55024c4b9cf8209cd68cd287__link", ".container-7eca7c8e088b7e147c0c7f2726763bb1__link"],
                [".pl-0e738b8b55024c4b9cf8209cd68cd287__link", ".container-7eca7c8e088b7e147c0c7f2726763bb1__link",".abcd"],
                [".container-7eca7c8e088b7e147c0c7f2726763bb1__link",".abcd",".pl-0e738b8b55024c4b9cf8209cd68cd287__link"],
                ]
                choice=random.choice(allselectors)
                #print(choice)
                selectors=choice
                element_found = False
                
                for selector in selectors:
                    try:
                        
                        await page.wait_for_selector(selector, timeout=4500)
                        # Correct way to get the element handle in Python:
                        element = await page.locator(selector).first.element_handle()  # Preferred
                        # OR, to match the JS $ exactly (less Playwright-idiomatic):
                        # element = await page.query_selector(selector)
                        if element:
                            #print(f"Found element with selector: {selector}")
                            await element.click()
                            element_found = True
                            #await page.close()
                            break
                    except Exception as e:
                        #print(f"Selector {selector} not found within timeout. Error: {e}")
                        #await page.close()
                        pass

                if not element_found:
                    print("No matching element found. Continuing...")

                if element_found:
                    await asyncio.sleep(3)

            except Exception as e:
                print(f"Error in tab {i + 1}: {e}")
                #await page.close()
            finally:
                await page.close()

        await context.clear_cookies()
        await context.close()
        await browser.close()


# Example usage:
num_tabs = int(input("tabs :"))
target_urls = ["https://www.pornlent.com","https://www.pornlent.com/categories","https://www.pornlent.com/pornstars","https://www.pornlent.com/trending/1","https://www.pornlent.com/trending/2","https://www.pornlent.com/trending/3","https://www.pornlent.com/trending/5","https://www.pornlent.com/trending/23","https://www.pornlent.com/trending/a","https://www.pornlent.com/trending/v","https://www.pornlent.com/trending/s","https://www.pornlent.com/trending/c","https://www.pornlent.com/trending/d","https://www.pornlent.com/trending/f","https://www.pornlent.com/trending/r"]
locations =locations = [
    # India
    {"latitude": 28.6139, "longitude": 77.2090, "country": "India", "city": "Delhi"},
    {"latitude": 19.0760, "longitude": 72.8777, "country": "India", "city": "Mumbai"},
    {"latitude": 12.9716, "longitude": 79.1581, "country": "India", "city": "Chennai"},
    {"latitude": 22.5726, "longitude": 88.3639, "country": "India", "city": "Kolkata"},
    {"latitude": 17.4065, "longitude": 78.4759, "country": "India", "city": "Hyderabad"},
    {"latitude": 12.9141, "longitude": 74.8559, "country": "India", "city": "Mangalore"},
    {"latitude": 26.8467, "longitude": 80.9462, "country": "India", "city": "Lucknow"},
    {"latitude": 23.0225, "longitude": 72.5714, "country": "India", "city": "Ahmedabad"},
    {"latitude": 20.2667, "longitude": 85.8245, "country": "India", "city": "Bhubaneswar"},
    {"latitude": 18.5204, "longitude": 73.8567, "country": "India", "city": "Pune"},

    # Pakistan
    {"latitude": 30.3753, "longitude": 69.3451, "country": "Pakistan", "city": "Quetta"},
    {"latitude": 24.8607, "longitude": 67.0011, "country": "Pakistan", "city": "Karachi"},
    {"latitude": 31.5204, "longitude": 74.3587, "country": "Pakistan", "city": "Lahore"},
    {"latitude": 33.6844, "longitude": 73.0479, "country": "Pakistan", "city": "Islamabad"},
    {"latitude": 34.0151, "longitude": 71.5806, "country": "Pakistan", "city": "Peshawar"},
    {"latitude": 29.3929, "longitude": 71.7044, "country": "Pakistan", "city": "Bahawalpur"},

    # Sri Lanka
    {"latitude": 6.9271, "longitude": 79.8612, "country": "Sri Lanka", "city": "Colombo"},
    {"latitude": 7.2906, "longitude": 80.6337, "country": "Sri Lanka", "city": "Kandy"},
    {"latitude": 7.8777, "longitude": 80.7543, "country": "Sri Lanka", "city": "Anuradhapura"},
    {"latitude": 6.0587, "longitude": 80.2209, "country": "Sri Lanka", "city": "Galle"},
    {"latitude": 7.4277, "longitude": 81.6905, "country": "Sri Lanka", "city": "Trincomalee"},

    # Canada
    {"latitude": 43.6532, "longitude": -79.3832, "country": "Canada", "city": "Toronto"},
    {"latitude": 45.5017, "longitude": -73.5673, "country": "Canada", "city": "Montreal"},
    {"latitude": 49.2827, "longitude": -123.1207, "country": "Canada", "city": "Vancouver"},
    {"latitude": 51.0447, "longitude": -114.0719, "country": "Canada", "city": "Calgary"},
    {"latitude": 53.5461, "longitude": -113.4938, "country": "Canada", "city": "Edmonton"},
    {"latitude": 44.6489, "longitude": -63.5752, "country": "Canada", "city": "Halifax"},
    {"latitude": 47.5604, "longitude": -52.7138, "country": "Canada", "city": "St. John's"},
    {"latitude": 46.8139, "longitude": -71.2080, "country": "Canada", "city": "Quebec City"},
    {"latitude": 45.4215, "longitude": -75.6972, "country": "Canada", "city": "Ottawa"}
]
loc=random.choice(locations)
asyncio.run(run_test(num_tabs, target_urls,loc))
